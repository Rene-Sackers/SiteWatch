@page "/Watchers/Edit/{Id:int}"
@using SiteWatch.Models
@using SiteWatch.Pages.Watchers.EditActions
@inherits EditBase

@if (PreviewQueryHtmlResult != null)
{
	<Popup Title="Preview query" Classes="container">
		<Body>
			@((MarkupString) PreviewQueryHtmlResult.Replace(Environment.NewLine, "<br>"))
		</Body>
		<Buttons>
			<button class="btn btn-primary" @onclick="() => PreviewQueryHtmlResult = null">Close</button>
		</Buttons>
	</Popup>
}

<div class="container mt-4">
	<h1 class="mb-4">Edit watcher</h1>

	<EditForm EditContext="EditContext" OnSubmit="Submit">
		<DataAnnotationsValidator />

		<div class="form-row">
			<div class="form-group col-md-6">
				<label for="@nameof(EditWatcherModel.Enabled)">
					Enabled<br/>
					<InputCheckbox id="@nameof(EditWatcherModel.Enabled)" @bind-Value="EditWatcherModel.Enabled" />
				</label>
			</div>
		</div>

		<div class="form-row">
			<div class="form-group col-md-6">
				<label for="@nameof(EditWatcherModel.Name)">Name</label>
				<InputText id="@nameof(EditWatcherModel.Name)" @bind-Value="EditWatcherModel.Name" class="form-control" />
				<ValidationMessage For="@(() => EditWatcherModel.Name)" />
			</div>
		</div>

		<div class="form-row">
			<div class="form-group col-md-6">
				<label for="@nameof(EditWatcherModel.Interval)">Interval</label>
				<InputText id="@nameof(EditWatcherModel.Interval)" @bind-Value="EditWatcherModel.Interval" type="number" class="form-control" />
				<ValidationMessage For="@(() => EditWatcherModel.Interval)" />
			</div>
		</div>

		<div class="form-row">
			<div class="form-group col-md-6">
				<label for="@nameof(GetDataActionName)">Get data action</label>
				<select id="@nameof(GetDataActionName)" @bind="GetDataActionName" class="form-control">
					<option value="@nameof(HttpGetAction)">HTTP GET</option>
					<option value="@nameof(HttpPostAction)">HTTP POST</option>
				</select>
			</div>
		</div>
		
		<div class="pl-4 sub-section">
			@switch (EditWatcherModel.GetDataAction)
			{
				case HttpAction httpAction:
					<EditHttpAction HttpAction="httpAction" />
					break;
			}
		</div>

		<div class="form-row">
			<div class="form-group col-md-6">
				<label for="@nameof(ParseDataActionName)">Parse data action</label>
				<select id="@nameof(ParseDataActionName)" @bind="ParseDataActionName" class="form-control">
					<option value="@nameof(HtmlQuerySelectorAction)">HTML query selector</option>
					<option value="@nameof(JsonPathAction)">JSON path</option>
				</select>
			</div>
		</div>
		
		<div class="pl-4 sub-section">
			@switch (EditWatcherModel.ParseDataAction)
			{
				case HtmlQuerySelectorAction htmlQuerySelectorAction:
					<EditHtmlQuerySelectorAction HtmlQuerySelectorAction="htmlQuerySelectorAction" />
					break;
				case JsonPathAction jsonPathAction:
					<EditJsonPathAction JsonPathAction="jsonPathAction" />
					break;
			}
		</div>

		<div class="form-row">
			<div class="form-group text-right">
				<a href="/" class="btn btn-light">Cancel</a>
				<button type="submit" class="btn btn-primary">Save</button>
			</div>
		</div>
	</EditForm>
</div>